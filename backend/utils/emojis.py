import re
import logging

logger = logging.getLogger(__name__)

# Dictionnaire de mots-cl√©s vers emojis
EMOJI_MAPPING = {
    # Animaux domestiques
    'chat': 'üê±', 'chats': 'üê±', 'chaton': 'üê±', 'chatons': 'üê±',
    'chien': 'üê∂', 'chiens': 'üê∂', 'chiot': 'üê∂', 'chiots': 'üê∂',
    'oiseau': 'üê¶', 'oiseaux': 'üê¶', 'pigeon': 'üê¶', 'pigeons': 'üê¶',
    'poisson': 'üêü', 'poissons': 'üêü',
    'lapin': 'üê∞', 'lapins': 'üê∞',
    'hamster': 'üêπ', 'souris': 'üê≠',
    
    # Animaux sauvages
    '√©l√©phant': 'üêò', '√©l√©phants': 'üêò',
    'lion': 'ü¶Å', 'lions': 'ü¶Å', 'lionne': 'ü¶Å',
    'tigre': 'üêÖ', 'tigres': 'üêÖ',
    'ours': 'üêª', 'panda': 'üêº',
    'singe': 'üêµ', 'singes': 'üêµ',
    'girafe': 'ü¶í', 'girafes': 'ü¶í',
    'z√®bre': 'ü¶ì', 'rhinoc√©ros': 'ü¶è',
    'hippopotame': 'ü¶õ', 'crocodile': 'üêä',
    'serpent': 'üêç', 'serpents': 'üêç',
    'papillon': 'ü¶ã', 'papillons': 'ü¶ã',
    'abeille': 'üêù', 'abeilles': 'üêù',
    
    # Animaux de ferme
    'vache': 'üêÑ', 'vaches': 'üêÑ',
    'cochon': 'üê∑', 'cochons': 'üê∑', 'porc': 'üê∑',
    'mouton': 'üêë', 'moutons': 'üêë',
    'ch√®vre': 'üêê', 'ch√®vres': 'üêê',
    'coq': 'üêì', 'poule': 'üêî', 'poules': 'üêî',
    'canard': 'ü¶Ü', 'canards': 'ü¶Ü',
    'cheval': 'üê¥', 'chevaux': 'üê¥', 'poney': 'üê¥',
    
    # Nourriture - Fruits
    'pomme': 'üçé', 'pommes': 'üçé',
    'banane': 'üçå', 'bananes': 'üçå',
    'orange': 'üçä', 'oranges': 'üçä',
    'citron': 'üçã', 'citrons': 'üçã',
    'raisin': 'üçá', 'raisins': 'üçá',
    'fraise': 'üçì', 'fraises': 'üçì',
    'past√®que': 'üçâ', 'melon': 'üçà',
    'p√™che': 'üçë', 'p√™ches': 'üçë',
    'ananas': 'üçç', 'cerise': 'üçí', 'cerises': 'üçí',
    
    # Nourriture - Plats
    'pizza': 'üçï', 'burger': 'üçî', 'hamburger': 'üçî',
    'frites': 'üçü', 'sandwich': 'ü•™', 'sandwichs': 'ü•™',
    'salade': 'ü•ó', 'salades': 'ü•ó',
    'soupe': 'üç≤', 'p√¢tes': 'üçù', 'spaghetti': 'üçù',
    'riz': 'üçö', 'pain': 'üçû', 'croissant': 'ü•ê',
    'taco': 'üåÆ', 'sushi': 'üç£', 'ramen': 'üçú',
    
    # Nourriture - Desserts
    'g√¢teau': 'üç∞', 'g√¢teaux': 'üç∞',
    'tarte': 'ü•ß', 'tartes': 'ü•ß',
    'glace': 'üç¶', 'glaces': 'üç¶',
    'bonbon': 'üç¨', 'bonbons': 'üç¨',
    'chocolat': 'üç´', 'cookie': 'üç™', 'cookies': 'üç™',
    'donuts': 'üç©', 'muffin': 'üßÅ',
    
    # Boissons
    'caf√©': '‚òï', 'th√©': 'üçµ',
    'bi√®re': 'üç∫', 'bi√®res': 'üç∫',
    'vin': 'üç∑', 'champagne': 'üçæ',
    'cocktail': 'üçπ', 'jus': 'üßÉ',
    'lait': 'ü•õ', 'eau': 'üíß',
    
    # Transport
    'voiture': 'üöó', 'voitures': 'üöó', 'auto': 'üöó',
    'v√©lo': 'üö≤', 'v√©los': 'üö≤', 'bicyclette': 'üö≤',
    'moto': 'üèçÔ∏è', 'motos': 'üèçÔ∏è', 'scooter': 'üõµ',
    'avion': '‚úàÔ∏è', 'avions': '‚úàÔ∏è',
    'train': 'üöÇ', 'trains': 'üöÇ',
    'bateau': '‚õµ', 'bateaux': '‚õµ', 'navire': 'üö¢',
    'bus': 'üöå', 'taxi': 'üöï',
    'camion': 'üöõ', 'camions': 'üöõ',
    'm√©tro': 'üöá', 'tramway': 'üöä',
    
    # Nature - M√©t√©o
    'soleil': '‚òÄÔ∏è', 'nuage': '‚òÅÔ∏è', 'nuages': '‚òÅÔ∏è',
    'pluie': 'üåßÔ∏è', 'orage': '‚õàÔ∏è',
    'neige': '‚ùÑÔ∏è', 'vent': 'üí®',
    'arc-en-ciel': 'üåà', '√©toile': '‚≠ê', '√©toiles': '‚≠ê',
    'lune': 'üåô', 'ciel': 'üåå',
    
    # Nature - Paysages
    'montagne': 'üèîÔ∏è', 'montagnes': 'üèîÔ∏è',
    'mer': 'üåä', 'oc√©an': 'üåä', 'plage': 'üèñÔ∏è',
    'for√™t': 'üå≤', 'for√™ts': 'üå≤',
    'd√©sert': 'üèúÔ∏è', 'volcan': 'üåã',
    'lac': 'üèûÔ∏è', 'rivi√®re': 'üèûÔ∏è',
    'cascade': 'üåä', '√Æle': 'üèùÔ∏è',
    
    # Nature - V√©g√©tation
    'fleur': 'üå∏', 'fleurs': 'üå∏',
    'rose': 'üåπ', 'roses': 'üåπ',
    'tournesol': 'üåª', 'tulipe': 'üå∑',
    'arbre': 'üå≥', 'arbres': 'üå≥',
    'palmier': 'üå¥', 'palmiers': 'üå¥',
    'herbe': 'üå±', 'feuille': 'üçÉ', 'feuilles': 'üçÉ',
    'champignon': 'üçÑ', 'champignons': 'üçÑ',
    
    # Personnes et parties du corps
    'personne': 'üë§', 'personnes': 'üë•', 'gens': 'üë•',
    'homme': 'üë®', 'hommes': 'üë®', 'gar√ßon': 'üë¶',
    'femme': 'üë©', 'femmes': 'üë©', 'fille': 'üëß',
    'enfant': 'üë∂', 'enfants': 'üë∂', 'b√©b√©': 'üë∂',
    'famille': 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶', 'couple': 'üë´',
    'visage': 'üòä', '≈ìil': 'üëÅÔ∏è', 'yeux': 'üëÄ',
    'main': '‚úã', 'mains': 'üëê', 'doigt': 'üëÜ',
    'pied': 'ü¶∂', 'pieds': 'ü¶∂',
    
    # √âmotions et expressions
    'sourire': 'üòä', 'rire': 'üòÑ', 'joie': 'üòÉ',
    'triste': 'üò¢', 'tristesse': 'üò¢', 'pleur': 'üò≠',
    'col√®re': 'üò†', 'surpris': 'üò≤', 'surprise': 'üò≤',
    'amour': '‚ù§Ô∏è', 'c≈ìur': '‚ù§Ô∏è', 'bisou': 'üòò',
    'fatigue': 'üò¥', 'fatigu√©': 'üò¥',
    'peur': 'üò®', 'inquiet': 'üò∞',
    
    # Actions et activit√©s
    'jouer': 'üéÆ', 'jeu': 'üéÆ', 'sport': '‚öΩ',
    'dormir': 'üò¥', 'sommeil': 'üò¥',
    'manger': 'üç¥', 'boire': 'ü•§',
    'courir': 'üèÉ', 'marcher': 'üö∂', 'danser': 'üíÉ',
    'nager': 'üèä', 'natation': 'üèä',
    'lire': 'üìñ', 'lecture': 'üìñ',
    '√©crire': '‚úçÔ∏è', '√©criture': '‚úçÔ∏è',
    'cuisiner': 'üë®‚Äçüç≥', 'cuisine': 'üë®‚Äçüç≥',
    'travail': 'üíº', 'travailler': 'üíº',
    '√©tudier': 'üìö', '√©tude': 'üìö',
    'voyage': '‚úàÔ∏è', 'voyager': '‚úàÔ∏è',
    
    # Objets du quotidien
    'livre': 'üìö', 'livres': 'üìö',
    't√©l√©phone': 'üì±', 'portable': 'üì±',
    'ordinateur': 'üíª', 'clavier': '‚å®Ô∏è',
    't√©l√©': 'üì∫', 't√©l√©vision': 'üì∫',
    'radio': 'üìª', 'musique': 'üéµ',
    'appareil photo': 'üì∑', 'photo': 'üì∏',
    'montre': '‚åö', 'lunettes': 'üëì',
    'sac': 'üëú', 'sacs': 'üëú',
    'parapluie': '‚òÇÔ∏è', 'chapeau': 'üëí',
    'cl√©': 'üîë', 'cl√©s': 'üîë',
    'argent': 'üí∞', 'euro': 'üí∂',
    
    # Lieux et b√¢timents
    'maison': 'üè†', 'maisons': 'üè†', 'domicile': 'üè†',
    'appartement': 'üè¢', 'immeuble': 'üè¢',
    '√©cole': 'üè´', '√©coles': 'üè´',
    'h√¥pital': 'üè•', 'pharmacie': 'üíä',
    'magasin': 'üè™', 'supermarch√©': 'üè™',
    'restaurant': 'üçΩÔ∏è', 'caf√©': '‚òï',
    '√©glise': '‚õ™', 'mosqu√©e': 'üïå',
    'parc': 'üå≥', 'jardin': 'üåª',
    'piscine': 'üèä', 'stade': 'üèüÔ∏è',
    'a√©roport': '‚úàÔ∏è', 'gare': 'üöÇ',
    
    # V√™tements
    'v√™tement': 'üëï', 'v√™tements': 'üëï',
    'tshirt': 'üëï', 'chemise': 'üëî',
    'pantalon': 'üëñ', 'jean': 'üëñ',
    'robe': 'üëó', 'jupe': 'üëó',
    'chaussure': 'üëü', 'chaussures': 'üëü',
    'basket': 'üëü', 'bottes': 'üë¢',
    'manteau': 'üß•', 'veste': 'üß•',
    'pull': 'üß•', 'sweat': 'üß•',
    
    # Couleurs
    'rouge': 'üî¥', 'bleu': 'üîµ', 'vert': 'üü¢',
    'jaune': 'üü°', 'orange': 'üü†', 'violet': 'üü£',
    'rose': 'üå∏', 'blanc': '‚ö™', 'noir': '‚ö´',
    'gris': 'üîò', 'marron': 'ü§é',
    
    # Objets techniques
    'wifi': 'üì∂', 'internet': 'üåê',
    'batterie': 'üîã', '√©lectricit√©': '‚ö°',
    'ampoule': 'üí°', 'lampe': 'üí°',
    'micro': 'üé§', 'casque': 'üéß',
    'cam√©ra': 'üìπ', 'film': 'üé¨',
    
    # Symboles et concepts
    'temps': '‚è∞', 'heure': 'üïê',
    'calendrier': 'üìÖ', 'date': 'üìÖ',
    'f√™te': 'üéâ', 'anniversaire': 'üéÇ',
    'cadeau': 'üéÅ', 'surprise': 'üéÅ',
    'feu': 'üî•', 'flamme': 'üî•',
    'eau': 'üíß', 'glace': 'üßä',
    'diamant': 'üíé', 'or': 'üèÜ',
    'm√©daille': 'ü•á', 'troph√©e': 'üèÜ',
    'drapeau': 'üè≥Ô∏è', 'france': 'üá´üá∑',
    
    # Nombres (bonus)
    'un': '1Ô∏è‚É£', 'deux': '2Ô∏è‚É£', 'trois': '3Ô∏è‚É£',
    'quatre': '4Ô∏è‚É£', 'cinq': '5Ô∏è‚É£', 'six': '6Ô∏è‚É£',
    'sept': '7Ô∏è‚É£', 'huit': '8Ô∏è‚É£', 'neuf': '9Ô∏è‚É£',
    'dix': 'üîü', 'cent': 'üíØ',
    
    # Directions
    'gauche': '‚¨ÖÔ∏è', 'droite': '‚û°Ô∏è',
    'haut': '‚¨ÜÔ∏è', 'bas': '‚¨áÔ∏è',
    'nord': '‚¨ÜÔ∏è', 'sud': '‚¨áÔ∏è',
    'est': '‚û°Ô∏è', 'ouest': '‚¨ÖÔ∏è',

    # Personnes et parties du corps
    'personne': 'üë§', 'personnes': 'üë•', 'gens': 'üë•',
    'homme': 'üë®', 'hommes': 'üë®', 'gar√ßon': 'üë¶',
    'femme': 'üë©', 'femmes': 'üë©', 'fille': 'üëß',
    'enfant': 'üë∂', 'enfants': 'üë∂', 'b√©b√©': 'üë∂',
    'famille': 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶', 'couple': 'üë´',
    'visage': 'üòä', '≈ìil': 'üëÅÔ∏è', 'yeux': 'üëÄ',
    'main': '‚úã', 'mains': 'üëê', 'doigt': 'üëÜ',
    'pied': 'ü¶∂', 'pieds': 'ü¶∂',
}

def add_emojis_to_text(text: str) -> str:
    """
    Ajoute des emojis pertinents √† un texte bas√© sur les mots-cl√©s
    
    Args:
        text (str): Texte √† enrichir avec des emojis
        
    Returns:
        str: Texte avec emojis ajout√©s
    """
    try:
        # Convertir en minuscules pour la recherche
        text_lower = text.lower()
        words = text_lower.split()
        
        # Trouver les emojis correspondants
        found_emojis = set()
        
        for word in words:
            # Recherche exacte
            if word in EMOJI_MAPPING:
                found_emojis.add(EMOJI_MAPPING[word])
            
            # Recherche dans les mots compos√©s
            for key, emoji in EMOJI_MAPPING.items():
                if key in text_lower:
                    found_emojis.add(emoji)
        
        # Limiter √† 3 emojis max pour √©viter la surcharge
        emojis_to_add = list(found_emojis)[:3]
        
        if emojis_to_add:
            return f"{text} {' '.join(emojis_to_add)}"
        else:
            return text
            
    except Exception as e:
        logger.warning(f"Erreur lors de l'ajout d'emojis: {e}")
        return text

def smart_emoji_placement(text: str) -> str:
    """
    Place les emojis de mani√®re plus intelligente dans le texte
    """
    try:
        text_lower = text.lower()
        result = text
        
        # Remplacer directement certains mots par mot + emoji
        for keyword, emoji in EMOJI_MAPPING.items():
            if keyword in text_lower:
                # Utiliser regex pour remplacer le mot en gardant la casse
                pattern = re.compile(re.escape(keyword), re.IGNORECASE)
                result = pattern.sub(f"{keyword} {emoji}", result, count=1)
                break  # Un seul remplacement pour √©viter la surcharge
        
        return result
        
    except Exception as e:
        logger.warning(f"Erreur placement intelligent emojis: {e}")
        return text